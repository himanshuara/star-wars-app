{"version":3,"sources":["webpack:///static/js/default.80d40e21.chunk.js","webpack:///./src/actions/planetActions.js?d6e4*","webpack:///./src/constants/configConstants.js?dc6f","webpack:///./src/actions/userActions.js?de08","webpack:///./src/App.js"],"names":["webpackJsonp","29","module","exports","__webpack_require__","recievePlanetList","data","type","filteredPlanetList","maxLimitReached","getPlanetList","params","dispatch","Promise","resolve","reject","req","XMLHttpRequest","open","method","url","onload","status","response","Error","statusText","onerror","send","then","results","JSON","parse","sortPlanetList","length","arr","left","right","tmp","i","j","pivotidx","pivot","parseInt","toFixed","population","_frontEndConstants","MIN_BASE_VALUE","name","Object","defineProperty","value","36","PROTOCOL","BASE_URL","USER_LIST_URL","PLANET_LIST_URL","46","recieveUserList","userAuthentication","userList","userInfo","authenticated","authCode","authMsg","AUTH_CODES","userObj","userName","password","isSuperUser","SW_SUPER_USER","updateUserInfo","authenticateUser","getState","userListReducer","getUsers","parseUserList","_planetActions","res","resObj","birth_year","push","_configConstants","127","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapDispatchToProps","_userActions","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_react","_react2","_reactRedux","App","_React$Component","this","getPrototypeOf","apply","arguments","createElement","className","children","Component","connect"],"mappings":"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","file":"static/js/default.80d40e21.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.recievePlanetList = recievePlanetList;\n\texports.filteredPlanetList = filteredPlanetList;\n\texports.maxLimitReached = maxLimitReached;\n\texports.getPlanetList = getPlanetList;\n\t\n\tvar _frontEndConstants = __webpack_require__(12);\n\t\n\t//Action to update planet list in state\n\tfunction recievePlanetList(data) {\n\t  return {\n\t    type: _frontEndConstants.RECIEVE_PLANET_LIST,\n\t    data: data\n\t  };\n\t}\n\t//Action to update filtered planet list in state\n\tfunction filteredPlanetList(data) {\n\t  return {\n\t    type: _frontEndConstants.FILTERED_PLANET_LIST,\n\t    data: data\n\t  };\n\t}\n\t//Action to set flag for max search reached\n\tfunction maxLimitReached(data) {\n\t  return {\n\t    type: _frontEndConstants.MAX_LIMIT_REACHED,\n\t    data: data\n\t  };\n\t}\n\t\n\t//Async action to get planet list\n\tfunction getPlanetList(params) {\n\t  return function (dispatch) {\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      // Do the usual XHR stuff\n\t      var req = new XMLHttpRequest();\n\t      req.open(params.method || 'GET', params.url);\n\t\n\t      req.onload = function () {\n\t        // This is called even on 404 etc\n\t        // so check the status\n\t        if (req.status === 200) {\n\t          // Resolve the promise with the response text\n\t          resolve(req.response);\n\t        } else {\n\t          // Otherwise reject with the status text\n\t          // which will hopefully be a meaningful error\n\t          reject(Error(req.statusText));\n\t        }\n\t      };\n\t\n\t      // Handle network errors\n\t      req.onerror = function () {\n\t        reject(Error(\"Network Error\"));\n\t      };\n\t\n\t      // Make the request\n\t      req.send();\n\t    }).then(function (response) {\n\t      var results = JSON.parse(response).results;\n\t      dispatch(recievePlanetList(sortPlanetList(results, 0, results.length - 1)));\n\t    });\n\t  };\n\t}\n\t\n\t//Quick sort implementation for parsing and \n\t//sorting the planet list based on population\n\t\n\tfunction sortPlanetList(arr, left, right) {\n\t  var i = left;\n\t  var j = right;\n\t  var tmp;\n\t  var pivotidx = (left + right) / 2;\n\t  var pivot = parseInt(arr[pivotidx.toFixed()].population !== \"unknown\" ? arr[pivotidx.toFixed()].population : _frontEndConstants.MIN_BASE_VALUE);\n\t  /* partition */\n\t  while (i <= j) {\n\t    while (parseInt(arr[i].population !== \"unknown\" ? arr[i].population : _frontEndConstants.MIN_BASE_VALUE) < pivot) {\n\t      i++;\n\t    }while (parseInt(arr[j].population !== \"unknown\" ? arr[j].population : _frontEndConstants.MIN_BASE_VALUE) > pivot) {\n\t      j--;\n\t    }if (i <= j) {\n\t      tmp = {\n\t        \"name\": arr[i].name,\n\t        \"population\": arr[i].population\n\t      };\n\t      arr[i] = {\n\t        \"name\": arr[j].name,\n\t        \"population\": arr[j].population\n\t      };\n\t      arr[j] = tmp;\n\t      i++;\n\t      j--;\n\t    }\n\t  }\n\t\n\t  /* recursion */\n\t  if (left < j) sortPlanetList(arr, left, j);\n\t  if (i < right) sortPlanetList(arr, i, right);\n\t  return arr;\n\t}\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar PROTOCOL = exports.PROTOCOL = 'http://';\n\tvar BASE_URL = exports.BASE_URL = 'swapi.co/api/';\n\tvar USER_LIST_URL = exports.USER_LIST_URL = PROTOCOL + BASE_URL + 'people/';\n\tvar PLANET_LIST_URL = exports.PLANET_LIST_URL = PROTOCOL + BASE_URL + 'planets/';\n\n/***/ },\n\n/***/ 46:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.authenticateUser = authenticateUser;\n\texports.getUsers = getUsers;\n\t\n\tvar _frontEndConstants = __webpack_require__(12);\n\t\n\tvar _planetActions = __webpack_require__(29);\n\t\n\tvar _configConstants = __webpack_require__(36);\n\t\n\t/**\n\t * [recieveUserList action to get parsed user list]\n\t * @param  {[type]} data [description]\n\t * @return {[Object]}      [resturns action with data]\n\t */\n\tfunction recieveUserList(data) {\n\t  return {\n\t    type: _frontEndConstants.RECIEVE_USER_LIST,\n\t    data: data\n\t  };\n\t}\n\t/**\n\t * [userAuthentication function to check if username password is correct]\n\t * @param  {[Object]} data     [Object conatining username and password]\n\t * @param  {[Array]} userList [List of total users]\n\t * @return {[type]}          [description]\n\t */\n\tfunction userAuthentication(data, userList) {\n\t  var userInfo = {};\n\t  userInfo.authenticated = false;\n\t  userInfo.authCode = \"0\";\n\t  userInfo.authMsg = _frontEndConstants.AUTH_CODES[userInfo.authCode];\n\t  for (var i = 0; i < userList.length; i++) {\n\t    var userObj = userList[i];\n\t    if (userObj.name === data.userName && userObj.password === data.password) {\n\t      userInfo.authenticated = true;\n\t      userInfo.authCode = \"1\";\n\t      userInfo.authMsg = _frontEndConstants.AUTH_CODES[userInfo.authCode];\n\t      userInfo.name = userObj.name;\n\t      userInfo.isSuperUser = userObj.name === _frontEndConstants.SW_SUPER_USER;\n\t      break;\n\t    }\n\t  }\n\t  return userInfo;\n\t}\n\t\n\t//Action to update user infro in state\n\tfunction updateUserInfo(data) {\n\t  return {\n\t    type: _frontEndConstants.USER_INFO,\n\t    data: data\n\t  };\n\t}\n\t\n\t//Action to authenticate user\n\tfunction authenticateUser(data) {\n\t\n\t  return function (dispatch, getState) {\n\t    var userList = getState().userListReducer.userList;\n\t    var userInfo = userAuthentication(data, userList);\n\t    dispatch(updateUserInfo(userInfo));\n\t  };\n\t}\n\t\n\t//Async action  to get user list\n\tfunction getUsers(params) {\n\t\n\t  return function (dispatch) {\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      // Do the usual XHR stuff\n\t      var req = new XMLHttpRequest();\n\t      req.open(params.method || 'GET', params.url);\n\t\n\t      req.onload = function () {\n\t        // This is called even on 404 etc\n\t        // so check the status\n\t        if (req.status === 200) {\n\t          // Resolve the promise with the response text\n\t          resolve(req.response);\n\t        } else {\n\t          // Otherwise reject with the status text\n\t          // which will hopefully be a meaningful error\n\t          reject(Error(req.statusText));\n\t        }\n\t      };\n\t\n\t      // Handle network errors\n\t      req.onerror = function () {\n\t        reject(Error(\"Network Error\"));\n\t      };\n\t\n\t      // Make the request\n\t      req.send();\n\t    }).then(function (response) {\n\t      dispatch(recieveUserList(parseUserList(response)));\n\t      dispatch((0, _planetActions.getPlanetList)({ url: _configConstants.PLANET_LIST_URL }));\n\t    });\n\t  };\n\t}\n\t\n\t//Function to parse the recieved user list\n\t\n\tfunction parseUserList(res) {\n\t  var resObj = res ? JSON.parse(res) : {};\n\t  var results = resObj.results || [],\n\t      userList = [];\n\t  for (var i = 0; i < results.length; i++) {\n\t    var userInfo = {};\n\t    userInfo.name = results[i].name;\n\t    userInfo.password = results[i].birth_year;\n\t    userList.push(userInfo);\n\t  }\n\t  return userList;\n\t}\n\n/***/ },\n\n/***/ 127:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(35);\n\t\n\tvar _configConstants = __webpack_require__(36);\n\t\n\tvar _userActions = __webpack_require__(46);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_React$Component) {\n\t  _inherits(App, _React$Component);\n\t\n\t  function App() {\n\t    _classCallCheck(this, App);\n\t\n\t    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'componentDidMount',\n\t\n\t    /**\n\t     * Called once before rendering of component,used to displatch fetch action\n\t     * @return {[type]}\n\t     */\n\t\n\t    value: function componentDidMount() {\n\t      this.props.getUsers({ url: _configConstants.USER_LIST_URL });\n\t    }\n\t\n\t    /**Render method called when component react renders\n\t     * @return {[type]}\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'mainContainer' },\n\t        this.props.children\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react2.default.Component);\n\t\n\t;\n\t\n\t/**\n\t * Function to dispatch action values as props\n\t */\n\tfunction mapDispatchToProps(dispatch) {\n\t  return {\n\t    getUsers: function getUsers(params) {\n\t      dispatch((0, _userActions.getUsers)(params));\n\t    }\n\t  };\n\t};\n\texports.default = (0, _reactRedux.connect)(null, mapDispatchToProps)(App);\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/default.80d40e21.chunk.js","import {\n   RECIEVE_PLANET_LIST,\n   FILTERED_PLANET_LIST,\n   MIN_BASE_VALUE,\n   MAX_LIMIT_REACHED\n} from '../constants/frontEndConstants';\n\n//Action to update planet list in state\nexport function recievePlanetList(data){\n    return {\n    type: RECIEVE_PLANET_LIST,\n    data\n  }\n}\n//Action to update filtered planet list in state\nexport function filteredPlanetList(data){\n    return {\n    type: FILTERED_PLANET_LIST,\n    data\n  }\n}\n//Action to set flag for max search reached\nexport function maxLimitReached(data){\n    return {\n    type: MAX_LIMIT_REACHED,\n    data\n  }\n}\n\n//Async action to get planet list\nexport function getPlanetList(params){\n      return dispatch => {\n    \n    \n     return (new Promise(function(resolve,reject){\n        // Do the usual XHR stuff\n    var req = new XMLHttpRequest();\n    req.open(params.method || 'GET', params.url);\n\n    req.onload = function() {\n      // This is called even on 404 etc\n      // so check the status\n      if (req.status === 200) {\n        // Resolve the promise with the response text\n        resolve(req.response);\n      }\n      else {\n        // Otherwise reject with the status text\n        // which will hopefully be a meaningful error\n        reject(Error(req.statusText));\n      }\n    };\n\n    // Handle network errors\n    req.onerror = function() {\n      reject(Error(\"Network Error\"));\n    };\n\n    // Make the request\n    req.send();\n     })).then(response => {\n        var results = JSON.parse(response).results;\n        dispatch(recievePlanetList(sortPlanetList(results,0,results.length-1)))\n        \n    })\n  }\n}\n\n//Quick sort implementation for parsing and \n//sorting the planet list based on population\n\nfunction  sortPlanetList(arr, left, right)\n{\n  var i = left;\n  var j = right;\n  var tmp;\n  var pivotidx = (left + right) / 2; \n  var pivot = parseInt(arr[pivotidx.toFixed()].population !== \"unknown\" ? arr[pivotidx.toFixed()].population : MIN_BASE_VALUE);  \n  /* partition */\n  while (i <= j)\n  {\n    while (parseInt(arr[i].population !== \"unknown\" ? arr[i].population :MIN_BASE_VALUE) < pivot)\n    i++;\n    while (parseInt(arr[j].population !== \"unknown\" ? arr[j].population :MIN_BASE_VALUE) > pivot)\n      j--;\n    if (i <= j)\n    {\n      tmp = {\n        \"name\":arr[i].name,\n        \"population\":arr[i].population\n      }\n      arr[i] = {\n        \"name\":arr[j].name,\n        \"population\":arr[j].population\n      };\n      arr[j] = tmp;\n      i++;\n      j--;\n    }\n  }\n\n  /* recursion */\n  if (left < j)\n    sortPlanetList(arr, left, j);\n  if (i < right)\n    sortPlanetList(arr, i, right);\n  return arr;\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/planetActions.js","export const PROTOCOL = 'http://';\nexport const BASE_URL = 'swapi.co/api/';\nexport const USER_LIST_URL = PROTOCOL + BASE_URL +'people/';\nexport const PLANET_LIST_URL = PROTOCOL + BASE_URL +'planets/';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/configConstants.js","import {\n   RECIEVE_USER_LIST,\n   SW_SUPER_USER,\n   USER_INFO,\n   AUTH_CODES\n} from '../constants/frontEndConstants';\nimport {getPlanetList} from './planetActions';\n\nimport {PLANET_LIST_URL} from '../constants/configConstants';\n\n/**\n * [recieveUserList action to get parsed user list]\n * @param  {[type]} data [description]\n * @return {[Object]}      [resturns action with data]\n */\nfunction recieveUserList(data){\n    return {\n    type: RECIEVE_USER_LIST,\n    data\n  }\n}\n/**\n * [userAuthentication function to check if username password is correct]\n * @param  {[Object]} data     [Object conatining username and password]\n * @param  {[Array]} userList [List of total users]\n * @return {[type]}          [description]\n */\nfunction userAuthentication(data,userList){\n  var userInfo = {};\n  userInfo.authenticated = false;\n  userInfo.authCode = \"0\";\n  userInfo.authMsg = AUTH_CODES[userInfo.authCode];\n  for(let i = 0 ; i < userList.length ; i++){\n    let userObj = userList[i];\n    if((userObj.name === data.userName) && (userObj.password === data.password)){\n      userInfo.authenticated = true;\n      userInfo.authCode = \"1\";\n      userInfo.authMsg = AUTH_CODES[userInfo.authCode];\n      userInfo.name = userObj.name;\n      userInfo.isSuperUser = (userObj.name === SW_SUPER_USER);\n      break;\n    }\n  }\n  return userInfo;\n}\n\n//Action to update user infro in state\nfunction updateUserInfo(data){\n  return {\n    type: USER_INFO,\n    data\n  }\n}\n\n//Action to authenticate user\nexport function authenticateUser(data){\n    \n     return (dispatch,getState) => {\n        const userList = getState().userListReducer.userList;\n        var userInfo = userAuthentication(data,userList)\n        dispatch(updateUserInfo(userInfo))\n    }\n\n}\n\n//Async action  to get user list\nexport function getUsers(params) {\n\n  return dispatch => {\n    \n     return (new Promise(function(resolve,reject){\n        // Do the usual XHR stuff\n    var req = new XMLHttpRequest();\n    req.open(params.method || 'GET', params.url);\n\n    req.onload = function() {\n      // This is called even on 404 etc\n      // so check the status\n      if (req.status === 200) {\n        // Resolve the promise with the response text\n        resolve(req.response);\n      }\n      else {\n        // Otherwise reject with the status text\n        // which will hopefully be a meaningful error\n        reject(Error(req.statusText));\n      }\n    };\n\n    // Handle network errors\n    req.onerror = function() {\n      reject(Error(\"Network Error\"));\n    };\n\n    // Make the request\n    req.send();\n     })).then(response => {\n        dispatch(recieveUserList(parseUserList(response)))\n        dispatch(getPlanetList({url:PLANET_LIST_URL}))\n    })\n  }\n}\n\n//Function to parse the recieved user list\n\nfunction parseUserList(res){\n  var resObj = res ? JSON.parse(res) : {};\n  var results = resObj.results || [],\n  userList = [];\n  for(let i=0; i < results.length ; i++){\n    let userInfo = {};\n    userInfo.name = results[i].name;\n    userInfo.password = results[i].birth_year;\n    userList.push(userInfo);\n  }\nreturn userList\n}\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/userActions.js","\nimport React  from 'react';\nimport { connect } from 'react-redux';\nimport {USER_LIST_URL} from './constants/configConstants';\nimport {getUsers} from './actions/userActions';\n\n\n  class App extends React.Component{ \n  /**\n   * Called once before rendering of component,used to displatch fetch action\n   * @return {[type]}\n   */\n\n   \n\n      \n  componentDidMount(){\n      this.props.getUsers({url:USER_LIST_URL});\n  }\n\n\n    /**Render method called when component react renders\n     * @return {[type]}\n     */\n     render(){\n       return (\n\n        <div className=\"mainContainer\">\n        {this.props.children}\n        </div>\n\n        );\n     }\n   };\n\n \n/**\n * Function to dispatch action values as props\n */\n function mapDispatchToProps(dispatch){\n  return {\n    getUsers: function(params){ dispatch(getUsers(params)); }\n  }\n};\nexport  default connect(null,mapDispatchToProps)(App);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js"],"sourceRoot":""}